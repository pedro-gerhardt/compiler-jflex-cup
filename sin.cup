import java_cup.runtime.*;

parser code {:
    public void report_error(String message, Object info) {
        StringBuilder m = new StringBuilder("Error");

        if (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);

            if (s.value != null) {
                m.append(": value: " + s.value.toString() + " - ");
            }

            if (s.left >= 0) {
                m.append("in line "+(s.left+1));
                if (s.right >= 0)
                    m.append(", column "+(s.right+1));
            }
        }

        m.append(" : " + message);

        System.err.println("\n" + m);
    }

    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }
:};

terminal CLASS, INT, BOOL, VOID, TRUE, FALSE, AND, OR, NOT, IF, ELSE, FOR, WHILE, RETURN; 
terminal EQ, EQEQ, NOTEQ, GT, LT, PLUS, MINUS, TIMES, DIVIDE; 
terminal COMMA, SEMI, LPAREN, RPAREN, LCURLY, RCURLY;
terminal IDENT, LIT;

non terminal type, attr;

start with attr;

attr ::= type IDENT SEMI;

type ::= INT | BOOL;

